buildscript{
    ext.web_dir = 'web'
    ext.kotlin_version = '1.3.10'
    ext.frontend_version = '0.0.37'
    ext.kotlinx_html_version = '0.6.10'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:$frontend_version"
    }
}
// apply plugin
apply plugin: 'org.jetbrains.kotlin.frontend'

apply plugin: 'kotlin2js'

/*
apply plugin: 'kotlin-dce-js'

runDceKotlinJs.keep "kframejs_main.com.rnett.kframejs.structure"
runDceKotlinJs.keep "kframejs_main.com.rnett.kframejs.structure.displayElement_9kf5g0\$"
*/

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:1.3.10"

    //compile "org.jetbrains.kotlinx:kotlinx-html-js:${kotlinx_html_version}"
}

compileKotlin2Js {
    kotlinOptions.moduleKind = "amd"
}

task assembleWeb(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "$buildDir/$web_dir"

    dependsOn classes
}

assemble.dependsOn assembleWeb

kotlinFrontend {
    npm {

    }
    webpackBundle {
        bundleName = "main"
        contentPath = file('src/main/web')
        mode = 'development'
        //mode = 'production'
    }
}
